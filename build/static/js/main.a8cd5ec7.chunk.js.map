{"version":3,"sources":["components/Header/index.jsx","components/Footer/index.jsx","components/RandomQuoteDisplay/index.jsx","components/AuthorQuoteDisplay/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","RandomButton","button","Header","action","onClick","size","Link","a","Footer","motion","QuoteContainer","QuoteSection","AuthorSection","AuthorName","p","Tag","span","IconWrapper","RandomQuoteDisplay","quote","buttonAction","AnimatePresence","initial","opacity","animate","exit","transition","duration","quoteText","quoteAuthor","quoteGenre","QuoteList","AuthorQuoteDisplay","quotes","map","quoteItem","App","base_url","useState","setQuote","authorQuotes","setAuthorQuotes","menu","setMenu","getRandomQuote","params","page","limit","url","encodeURI","axios","get","then","response","data","catch","error","console","log","getThreeQuotesFromAuthor","authorName","author","handleAuthorButtonClick","e","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8cd5ec7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { HiOutlineRefresh } from \"react-icons/hi\";\n\nconst Container = styled.div`\n\twidth: 100%;\n\tmargin: 1rem 0;\n\tmax-height: 20vh;\n\n\tdisplay: flex;\n\tflex-direction: row-reverse;\n`;\n\nconst RandomButton = styled.button`\n\toutline: none;\n\tborder: 2px solid transparent;\n\tbackground-color: transparent;\n\tborder-radius: 2rem;\n\tpadding: 0.25rem 2rem;\n\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\tgap: 1rem;\n\n\tfont-family: inherit;\n\tfont-weight: 600;\n\tcolor: #4f4f4f;\n\n\ttransition: all 0.3s ease-in-out;\n\tcursor: pointer;\n\n\t& svg {\n\t\ttransition: all 0.3s ease-in-out;\n\t}\n\n\t&:hover {\n\t\tborder: 2px solid #f7df94;\n\t\tbackground-color: #f7df94;\n\t\tcolor: black;\n\t\tbox-shadow: 0px 3px 5px rgba(0, 0, 0, 0.1);\n\t\ttransition: all 0.3s ease-in-out;\n\t}\n\n\t&:hover > svg {\n\t\ttransform: rotate(-45deg);\n\t}\n`;\n\nconst Header = ({ action }) => {\n\treturn (\n\t\t<Container>\n\t\t\t<RandomButton onClick={action}>\n\t\t\t\t<p>random</p>\n\t\t\t\t<HiOutlineRefresh size={20} />\n\t\t\t</RandomButton>\n\t\t</Container>\n\t);\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n\ttext-align: center;\n\tfont-family: \"Montserrat\", sans-serif;\n\tfont-weight: 400;\n\tfont-size: 0.9rem;\n\n\tpadding: 1rem 0;\n`;\n\nconst Link = styled.a`\n\tfont-weight: 700;\n\tcolor: orangered;\n`;\n\nconst Footer = () => {\n\treturn (\n\t\t<Container>\n\t\t\tcreated by <Link>Florian NGUYEN</Link>- devChallenges.io\n\t\t</Container>\n\t);\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { FaLongArrowAltRight } from \"react-icons/fa\";\n\nconst Container = styled(motion.div)`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tflex: 1;\n\tgap: 1rem;\n\tpadding: 0 12%;\n\theight: 100%;\n\tmax-height: 60vh;\n`;\n\nconst QuoteContainer = styled(motion.div)`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\twidth: 100%;\n\n\tpadding: 50 10%;\n`;\n\nconst QuoteSection = styled(motion.div)`\n\tpadding: 1rem 4rem;\n\n\tfont-size: 1.5rem;\n\tfont-weight: 500;\n\tborder-left: 8px solid #f7df94;\n\n\tmax-height: 40vh;\n\toverflow: hidden;\n\toverflow: auto;\n`;\n\nconst AuthorSection = styled(motion.button)`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\toutline: none;\n\tborder: none;\n\tbackground-color: transparent;\n\ttext-align: left;\n\tpadding: 1.5rem 4rem;\n\tmargin: 0;\n\n\ttransition: all 0.4s ease-in;\n\n\tcursor: pointer;\n\n\t&:hover {\n\t\tbackground-color: #333333;\n\n\t\t& p {\n\t\t\tcolor: white;\n\t\t}\n\n\t\t& svg {\n\t\t\tcolor: white;\n\t\t}\n\t}\n`;\n\nconst AuthorName = styled.p`\n\tfont-weight: 700;\n\tfont-size: 1.1rem;\n\tcolor: #4f4f4f;\n\tmargin: 0.5rem 0;\n\tpadding: 0;\n`;\n\nconst Tag = styled.span`\n\tfont-weight: 500;\n\tcolor: #828282;\n\tline-height: 1rem;\n\tmargin: 0.5rem 0;\n\tpadding: 0;\n`;\n\nconst IconWrapper = styled.div`\n\theight: 100%;\n\tfont-size: 1.5rem;\n\tcolor: transparent;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nconst RandomQuoteDisplay = ({ quote, buttonAction }) => {\n\treturn (\n\t\t<Container>\n\t\t\t<AnimatePresence>\n\t\t\t\t{quote && (\n\t\t\t\t\t<QuoteContainer\n\t\t\t\t\t\tkey=\"quote-container\"\n\t\t\t\t\t\tinitial={{ opacity: 0 }}\n\t\t\t\t\t\tanimate={{ opacity: 1 }}\n\t\t\t\t\t\texit={{ opacity: 0 }}\n\t\t\t\t\t\ttransition={{ duration: 1 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<QuoteSection>\"{quote.quoteText}\"</QuoteSection>\n\t\t\t\t\t</QuoteContainer>\n\t\t\t\t)}\n\n\t\t\t\t{quote && (\n\t\t\t\t\t<QuoteContainer\n\t\t\t\t\t\tkey=\"author-container\"\n\t\t\t\t\t\tinitial={{ opacity: 0 }}\n\t\t\t\t\t\tanimate={{ opacity: 1 }}\n\t\t\t\t\t\texit={{ opacity: 0 }}\n\t\t\t\t\t\ttransition={{ duration: 1 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<AuthorSection onClick={buttonAction}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<AuthorName>{quote.quoteAuthor}</AuthorName>\n\t\t\t\t\t\t\t\t<Tag>{quote.quoteGenre}</Tag>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<IconWrapper>\n\t\t\t\t\t\t\t\t<FaLongArrowAltRight />\n\t\t\t\t\t\t\t</IconWrapper>\n\t\t\t\t\t\t</AuthorSection>\n\t\t\t\t\t</QuoteContainer>\n\t\t\t\t)}\n\t\t\t</AnimatePresence>\n\t\t</Container>\n\t);\n};\n\nexport default RandomQuoteDisplay;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nconst Container = styled(motion.div)`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: flex-start;\n\talign-items: center;\n\t/* flex: 1; */\n\tgap: 1rem;\n\tpadding: 0 12%;\n\t/* max-height: 50%; */\n\tmax-height: 60vh;\n`;\n\nconst QuoteList = styled(motion.div)`\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\n\t::-webkit-scrollbar {\n\t\twidth: 5px;\n\t}\n\n\t::-webkit-scrollbar-track {\n\t\tbackground: #f1f1f1;\n\t\tborder-radius: 3px;\n\t}\n\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: #888;\n\t\tborder-radius: 3px;\n\t}\n\n\t::-webkit-scrollbar-thumb:hover {\n\t\tbackground: #555;\n\t}\n`;\n\nconst QuoteContainer = styled(motion.div)`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\n\tpadding: 0 10%;\n`;\n\nconst QuoteSection = styled(motion.div)`\n\tpadding: 0.5rem 4rem;\n\tmargin: 1.5rem 0;\n\n\tfont-size: 1.25rem;\n\tfont-weight: 500;\n\tborder-left: 8px solid #f7df94;\n`;\n\nconst AuthorSection = styled(motion.div)`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\toutline: none;\n\tborder: none;\n\tbackground-color: transparent;\n\ttext-align: left;\n\tpadding: 1.5rem 4rem 0;\n\tmargin: 0;\n\n\ttransition: all 0.4s ease-in;\n`;\n\nconst AuthorName = styled.p`\n\tfont-weight: 700;\n\tfont-size: 1.1rem;\n\tcolor: #4f4f4f;\n\tmargin: 0.5rem 0;\n\tpadding: 0;\n`;\n\nconst AuthorQuoteDisplay = ({ quotes }) => {\n\treturn (\n\t\t<Container>\n\t\t\t<AnimatePresence>\n\t\t\t\t{quotes && (\n\t\t\t\t\t<QuoteContainer\n\t\t\t\t\t\tkey=\"author-container\"\n\t\t\t\t\t\tinitial={{ opacity: 0 }}\n\t\t\t\t\t\tanimate={{ opacity: 1 }}\n\t\t\t\t\t\texit={{ opacity: 0 }}\n\t\t\t\t\t\ttransition={{ duration: 1 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<AuthorSection>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<AuthorName>{quotes[0].quoteAuthor}</AuthorName>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</AuthorSection>\n\t\t\t\t\t</QuoteContainer>\n\t\t\t\t)}\n\t\t\t\t<QuoteList>\n\t\t\t\t\t{quotes &&\n\t\t\t\t\t\tquotes.map((quoteItem) => (\n\t\t\t\t\t\t\t<QuoteContainer\n\t\t\t\t\t\t\t\tkey=\"quote-container\"\n\t\t\t\t\t\t\t\tinitial={{ opacity: 0 }}\n\t\t\t\t\t\t\t\tanimate={{ opacity: 1 }}\n\t\t\t\t\t\t\t\texit={{ opacity: 0 }}\n\t\t\t\t\t\t\t\ttransition={{ duration: 1 }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<QuoteSection>\"{quoteItem.quoteText}\"</QuoteSection>\n\t\t\t\t\t\t\t</QuoteContainer>\n\t\t\t\t\t\t))}\n\t\t\t\t</QuoteList>\n\t\t\t</AnimatePresence>\n\t\t</Container>\n\t);\n};\n\nexport default AuthorQuoteDisplay;\n","import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport RandomQuoteDisplay from \"./components/RandomQuoteDisplay\";\nimport AuthorQuoteDisplay from \"./components/AuthorQuoteDisplay\";\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\tmargin: auto auto;\n\twidth: 80%;\n\theight: 100%;\n`;\n\nfunction App() {\n\tconst base_url = \"https://quote-garden.herokuapp.com/api/v3\";\n\n\tconst [quote, setQuote] = useState(null);\n\tconst [authorQuotes, setAuthorQuotes] = useState([]);\n\tconst [menu, setMenu] = useState(\"random\");\n\n\tconst getRandomQuote = async () => {\n\t\tconst params = {\n\t\t\t// author:,\n\t\t\t// genre:,\n\t\t\t// query:,\n\t\t\tpage: 1,\n\t\t\tlimit: 1,\n\t\t};\n\n\t\tconst url = encodeURI(base_url + \"/quotes/random\");\n\t\tconst quote = await axios\n\t\t\t.get(url, { params })\n\t\t\t.then((response) => response.data.data[0])\n\t\t\t.catch((error) => console.log(error));\n\n\t\tsetMenu(\"random\");\n\t\tsetAuthorQuotes([]);\n\t\tsetQuote(quote);\n\t};\n\n\tconst getThreeQuotesFromAuthor = async (authorName) => {\n\t\tconst params = {\n\t\t\tauthor: authorName,\n\t\t\t// genre:,\n\t\t\t// query:,\n\t\t\t// page: 1,\n\t\t\tlimit: 3,\n\t\t};\n\n\t\tconst url = encodeURI(base_url + \"/quotes\");\n\t\tconst quotes = await axios\n\t\t\t.get(url, { params })\n\t\t\t.then((response) => response.data.data)\n\t\t\t.catch((error) => console.log(error));\n\n\t\tsetAuthorQuotes(quotes);\n\t\tsetQuote(null);\n\t};\n\n\tconst handleAuthorButtonClick = async (e) => {\n\t\tawait getThreeQuotesFromAuthor(quote.quoteAuthor).then(() => {\n\t\t\tsetMenu(\"author\");\n\t\t\tconsole.log(authorQuotes);\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tgetRandomQuote();\n\t}, []);\n\n\treturn (\n\t\t<Container>\n\t\t\t<Header action={getRandomQuote} />\n\n\t\t\t<AnimatePresence>\n\t\t\t\t{menu === \"random\" && (\n\t\t\t\t\t<RandomQuoteDisplay\n\t\t\t\t\t\tquote={quote}\n\t\t\t\t\t\tbuttonAction={handleAuthorButtonClick}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t\t{menu === \"author\" && <AuthorQuoteDisplay quotes={authorQuotes} />}\n\t\t\t</AnimatePresence>\n\t\t\t<Footer />\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}